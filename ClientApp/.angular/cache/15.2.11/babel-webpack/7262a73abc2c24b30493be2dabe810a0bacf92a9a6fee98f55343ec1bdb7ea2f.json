{"ast":null,"code":"import { FormControl, FormGroup } from '@angular/forms';\nimport { ContactDto } from '../Modal/ContactDto';\nimport { ValidationHelper } from '../Utility/validation-helper';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../Services/contact.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"ngx-bootstrap/modal\";\nconst _c0 = [\"contactModal\"];\nfunction ContactListComponent_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\")(1, \"em\");\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ContactListComponent_tr_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"td\")(10, \"td\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const c_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(c_r3.contactId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(c_r3.firstName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(c_r3.lastName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(c_r3.email);\n  }\n}\nexport class ContactListComponent {\n  constructor(contactService) {\n    this.contactService = contactService;\n    this.contacts = [];\n  }\n  ngOnInit() {\n    this.contactForm = new FormGroup({\n      Email: new FormControl(),\n      FirstName: new FormControl(),\n      LastName: new FormControl()\n    });\n  }\n  openModal() {\n    this.contactModal.show();\n  }\n  closeModal() {\n    this.contactModal.hide();\n  }\n  saveContactForm() {\n    if (this.contactForm.invalid) {\n      ValidationHelper.validateAllFormFields(this.contactForm);\n      return;\n    } else {\n      let contactDto = new ContactDto();\n      contactDto = Object.assign({}, this.contactForm.value);\n      this.contactService.createContact(contactDto).subscribe(x => {});\n    }\n  }\n  static #_ = this.ɵfac = function ContactListComponent_Factory(t) {\n    return new (t || ContactListComponent)(i0.ɵɵdirectiveInject(i1.ContactService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ContactListComponent,\n    selectors: [[\"app-contact-list\"]],\n    viewQuery: function ContactListComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contactModal = _t.first);\n      }\n    },\n    decls: 51,\n    vars: 3,\n    consts: [[\"id\", \"tableLabel\"], [4, \"ngIf\"], [\"type\", \"button\", \"data-toggle\", \"modal\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"aria-labelledby\", \"tableLabel\", 1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [\"bsModal\", \"\", \"id\", \"contactModal\", \"tabindex\", \"-1\", \"role\", \"dialog\", \"aria-labelledby\", \"contactModal\", \"aria-hidden\", \"true\", 1, \"modal\"], [\"contactModal\", \"bs-modal\"], [1, \"modal-dialog\", \"modal-md\"], [1, \"modal-content\"], [1, \"modal-header\"], [1, \"modal-title\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"close\", 3, \"click\"], [\"aria-hidden\", \"true\"], [1, \"modal-body\"], [3, \"formGroup\"], [1, \"form-group\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"emailId\", \"placeholder\", \"Enter email\", \"formControlName\", \"email\", 1, \"form-control\"], [\"for\", \"firstName\"], [\"type\", \"text\", \"id\", \"firstNameId\", \"placeholder\", \"Enter First Name\", \"formControlName\", \"firstName\", 1, \"form-control\"], [\"for\", \"lastName\"], [\"type\", \"text\", \"id\", \"lastNameId\", \"placeholder\", \"Enter Last Name\", \"formControlName\", \"lastName\", 1, \"form-control\"], [1, \"modal-footer\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", \"btn-sm\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", \"btn-sm\", 3, \"click\"]],\n    template: function ContactListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\", 0);\n        i0.ɵɵtext(1, \"Contact List\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(2, ContactListComponent_p_2_Template, 3, 0, \"p\", 1);\n        i0.ɵɵelementStart(3, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function ContactListComponent_Template_button_click_3_listener() {\n          return ctx.openModal();\n        });\n        i0.ɵɵtext(4, \"Create Contact\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"table\", 3)(6, \"thead\")(7, \"tr\")(8, \"th\");\n        i0.ɵɵtext(9, \"Id\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"th\");\n        i0.ɵɵtext(11, \"First Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"th\");\n        i0.ɵɵtext(13, \"Last Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"th\");\n        i0.ɵɵtext(15, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"th\");\n        i0.ɵɵtext(17, \"Edit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"th\");\n        i0.ɵɵtext(19, \"Delete\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(20, \"tbody\");\n        i0.ɵɵtemplate(21, ContactListComponent_tr_21_Template, 11, 4, \"tr\", 4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(22, \"div\", 5, 6)(24, \"div\", 7)(25, \"div\", 8)(26, \"div\", 9)(27, \"h5\", 10);\n        i0.ɵɵtext(28, \"Create Modal\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function ContactListComponent_Template_button_click_29_listener() {\n          return ctx.closeModal();\n        });\n        i0.ɵɵelementStart(30, \"span\", 12);\n        i0.ɵɵtext(31, \"\\u00D7\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(32, \"div\", 13)(33, \"form\", 14)(34, \"div\", 15)(35, \"label\", 16);\n        i0.ɵɵtext(36, \"Email address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(37, \"input\", 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"div\", 15)(39, \"label\", 18);\n        i0.ɵɵtext(40, \"First Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(41, \"input\", 19);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(42, \"div\", 15)(43, \"label\", 20);\n        i0.ɵɵtext(44, \"Last Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(45, \"input\", 21);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(46, \"div\", 22)(47, \"button\", 23);\n        i0.ɵɵlistener(\"click\", function ContactListComponent_Template_button_click_47_listener() {\n          return ctx.saveContactForm();\n        });\n        i0.ɵɵtext(48, \" Save \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(49, \"button\", 24);\n        i0.ɵɵlistener(\"click\", function ContactListComponent_Template_button_click_49_listener() {\n          return ctx.closeModal();\n        });\n        i0.ɵɵtext(50, \" Close \");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !(ctx.contacts == null ? null : ctx.contacts.length));\n        i0.ɵɵadvance(19);\n        i0.ɵɵproperty(\"ngForOf\", ctx.contacts);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"formGroup\", ctx.contactForm);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i4.ModalDirective],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","ContactDto","ValidationHelper","i0","ContactListComponent","constructor","contactService","ngOnInit","contactForm","Email","FirstName","LastName","openModal","contactModal","show","closeModal","hide","saveContactForm","invalid","validateAllFormFields","contactDto","Object","assign","value","createContact","subscribe","x","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["D:\\Project\\CMA\\ClientApp\\src\\app\\contact-list\\contact-list.component.ts","D:\\Project\\CMA\\ClientApp\\src\\app\\contact-list\\contact-list.component.html"],"sourcesContent":["import { Component, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { ModalDirective } from 'ngx-bootstrap/modal';\r\nimport { ContactDto } from '../Modal/ContactDto';\r\nimport { ValidationHelper } from '../Utility/validation-helper';\r\nimport { ContactService } from '../Services/contact.service';\r\n\n@Component({\n  selector: 'app-contact-list',\n  templateUrl: './contact-list.component.html',\n  styleUrls: ['./contact-list.component.css']\n})\nexport class ContactListComponent {\n  public contacts: ContactDto[] = [];\n  contactForm!: FormGroup;\n  @ViewChild('contactModal', { static: true }) contactModal!: ModalDirective;\n\n  constructor(\r\n    private readonly contactService: ContactService) {\n\n  }\n  ngOnInit() {\n    this.contactForm = new FormGroup({\n      Email: new FormControl(),\n      FirstName: new FormControl(),\n      LastName: new FormControl(),\n\n    });\n  }\n\n  openModal() {\n    this.contactModal.show();\r\n  }\n\n  closeModal() {\n    this.contactModal.hide();\r\n  }\n\n  saveContactForm() {\n    if (this.contactForm.invalid) {\r\n      ValidationHelper.validateAllFormFields(this.contactForm);\r\n      return;\r\n    }\r\n    else {\r\n      let contactDto: ContactDto = new ContactDto();\r\n      contactDto = Object.assign({}, this.contactForm.value);\r\n      this.contactService.createContact(contactDto).subscribe(x => { })\r\n    }\r\n  }\n}\n","<h1 id=\"tableLabel\">Contact List</h1>\r\n\r\n\r\n\r\n<p *ngIf=\"!contacts?.length\"><em>Loading...</em></p>\r\n<button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" (click)=\"openModal()\">Create Contact</button>\r\n<table class='table table-striped' aria-labelledby=\"tableLabel\">\r\n  <thead>\r\n    <tr>\r\n      <th>Id</th>\r\n      <th>First Name</th>\r\n      <th>Last Name</th>\r\n      <th>Email</th>\r\n      <th>Edit</th>\r\n      <th>Delete</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let c of contacts\">\r\n      <td>{{ c.contactId }}</td>\r\n      <td>{{ c.firstName }}</td>\r\n      <td>{{ c.lastName }}</td>\r\n      <td>{{ c.email }}</td>\r\n      <td></td>\r\n      <td></td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\n<div bsModal #contactModal=\"bs-modal\" class=\"modal\" id=\"contactModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"contactModal\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog modal-md\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\">Create Modal</h5>\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" (click)=\"closeModal()\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n\r\n      <div class=\"modal-body\">\r\n\r\n        <form [formGroup]=\"contactForm\">\r\n          <div class=\"form-group\">\r\n            <label for=\"email\">Email address</label>\r\n            <input type=\"email\"\r\n                   class=\"form-control\"\r\n                   id=\"emailId\"\r\n                   placeholder=\"Enter email\"\r\n                   formControlName=\"email\">\r\n\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"firstName\">First Name</label>\r\n            <input type=\"text\"\r\n                   class=\"form-control\"\r\n                   id=\"firstNameId\"\r\n                   placeholder=\"Enter First Name\"\r\n                   formControlName=\"firstName\">\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"lastName\">Last Name</label>\r\n            <input type=\"text\"\r\n                   class=\"form-control\"\r\n                   id=\"lastNameId\"\r\n                   placeholder=\"Enter Last Name\"\r\n                   formControlName=\"lastName\">\r\n          </div>\r\n\r\n        </form>\r\n\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-primary btn-sm\" (click)=\"saveContactForm()\">\r\n          Save\r\n        </button>\r\n        <button type=\"button\" class=\"btn btn-secondary btn-sm\" (click)=\"closeModal()\">\r\n          Close\r\n        </button>\r\n\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}